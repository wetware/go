# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -race ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for private registry
        if: github.ref == 'refs/heads/master'
        run: |
          mkdir -p /etc/docker/certs.d/${{ secrets.PRIVATE_REGISTRY }}
          echo "${{ secrets.REGISTRY_CA_CERT }}" | base64 -d > /etc/docker/certs.d/${{ secrets.PRIVATE_REGISTRY }}/ca.crt
          echo '{"insecure-registries": ["${{ secrets.PRIVATE_REGISTRY }}"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Private Registry
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag and push to Private Registry
        if: github.ref == 'refs/heads/master'
        run: |
          # Tag the image for private registry
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ secrets.PRIVATE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ secrets.PRIVATE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # Push to private registry
          docker push ${{ secrets.PRIVATE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.PRIVATE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # Verify the push
          docker pull ${{ secrets.PRIVATE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
